#!/bin/bash

set -e

cd $(dirname $0)

# use the following the exported data from the wolfram notebook and prepare & version into the project:
# cp ~/densities.txt densities.txt
# zstd -12 densities.txt

zstd -dc densities.txt.zst | 
    sed -E -e 's/Quantity\[//g' |
    sed -E -e 's/"Kilograms"\/"Meters"\^3\]//g' | 
    sed -E -e 's/, , /, /g' |
    sed -E -e 's/, }/}/g' |
    sed -E -e 's/{/[/g' |
    sed -E -e 's/}/]/g' | 
    # This whole sequence of jq commands was generated by iterating over the data
    # It could be heavily simplified actually. There is a lot of transformations that are not really necessary
    jq -s '
        [
            to_entries[] | 
            (.key * 10 + 1) as $temperature_min |
            ($temperature_min + 9) as $temperature_max |
            {
                temperature_range: {
                    min: $temperature_min, 
                    max: $temperature_max,
                }, 
                pressures: 
                    .value | 
                    [
                        [ 
                            to_entries[] |
                            ((.key + 1)) as $pressure |
                            {
                                key: ($pressure | tostring),
                                value: [
                                    .value | 
                                    to_entries[] |
                                    {
                                        pressure: $pressure,
                                        temperature: ($temperature_min   + .key),
                                        density: .value
                                    }
                                ]
                            }
                        ] | from_entries
                    ]
            }
        ]
    ' | 
    jq -s '
        # now flatten the whole thing
        [
            .[][].pressures[][][] |
            {
                p: .pressure,
                t: .temperature,
                d: .density
            }
        ] |
        # sort it
        sort_by(.p, .t)
    '  |
    jq '
        # and now compact into an array of arrays: first level is pressure, second level is the density for each temperature
        # - pressure starts at 1 bar
        # - temperature starts at 1C
        group_by(.p) |
        [
            to_entries[] | {
                pressure: .value[0].p, 
                densities: [.value[].d]
            }
        ] | [
            .[].densities
        ]
    '
